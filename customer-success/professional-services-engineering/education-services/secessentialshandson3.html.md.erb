---
layout: handbook-page-toc
title: "GitLab Security Essentials Hands On Guide- Lab 3"
description: "This Hands On Guide Lab is designed to walk you through the lab exercises used in the GitLab Security Essentials course."
---
# GitLab Security Essentials Hands On Guide- Lab 3
{:.no_toc}

## On this page
{:.no_toc .hidden-md .hidden-lg}

- TOC
{:toc .hidden-md .hidden-lg}

## LAB 2- ENABLE DEPENDENCY SCANNING

### Edit the YML File to add Dependency Scanning
1. In the Project **{lastname} SecurityProject1**, click on your gitlab-ci.yml file.
2. Click on the blue **Edit** button to begin editing your .gitlab-ci.yml file.
3. Note: For this lab, please pull up the following [Docs article](https://docs.gitlab.com/ee/user/application_security/dependency_scanning/) to assist you. This page displays instructions for how to include Dependency Scanning in your own CI. The page also displays GitLab supported languages and frameworks.
4. On the Docs page, scroll down and locate the **Configuration** section.
5. Copy the following line: 
include:
     template: Security/Dependency-Scanning.gitlab-ci.yml
6. Navigate back to the **GitLab dashboard** and locate your ***.gitlab-ci.yml*** file
7. **Paste the code** just copied below the sections leaving a space between blocks of code. Note: ensure this lines up with the template.
8. Click the green **Commit Changes** button to begin running your pipeline.

### Add an Artifact for the Dependency Scanning Report
1. Click on your gitlab-ci.yml file again and click the **Web IDE** or **Edit** button.
2. At the end of your YML file, in the beginning of the last line, **paste** the **following code**:
dependency\_scanning:
    artifacts:
        paths: [gl-dependency-scanning-report.json]
3. Click the blue **Commit** button to begin running your pipeline.
4. Add a message for your change.
5. Click **Commit to master branch**. Note: We donâ€™t want to create a new branch ***Note***: Whenever you are attempting to use Dependency Scanning, it is important that you remember to add a supported file for that language which will contain your dependencies- since we used a template- this file was added for us- to see the supported file types- view our [Docs Webpage](https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#supported-languages-and-package-managers) on this topic.

### Check the scanning result and ensure the pipeline worked
1. Navigate to **CI/CD** in the left pane  Note the security scans are running successfully.
2. Click on **Security & Compliance** > **Configuration** and ensure that Dependency Scanning has been successfully enabled.


### SUGGESTIONS?

If you wish to make a change to our Hands on Guide for GitLab Security Essentials- please submit your changes via Merge Request!

