---
layout: handbook-page-toc
title: "GitLab Security Essentials Hands On Guide- Lab 4"
description: "This Hands On Guide Lab is designed to walk you through the lab exercises used in the GitLab Security Essentials course."
---
# GitLab Security Essentials Hands On Guide- Lab 4
{:.no_toc}

## On this page
{:.no_toc .hidden-md .hidden-lg}

- TOC
{:toc .hidden-md .hidden-lg}

## LAB 4- DOCKERIZE YOUR APP AND ADD CONTAINER SCANNING

Using a docker based approach, we will be updating the build step from the gitlab-ci.yaml file to use docker! Once we get the application containerized and publish it to the gitlab container registry, we will enable container scanning.

### Edit the YML File to add Container Scanning
1. In the Project **{lastname} SecurityProject1**, click on your gitlab-ci.yml file.
2. First let's containerize our application, to get started, click on **Web IDE** to begin editing your .gitlab-ci.yml file.
3. Now we should update our CI file to run the docker commands to do the build automatically on every change to the source code. Update your **gitlab-ci.yml** to use docker to build your application. Note there are some specific **variables** that need to be set for docker in docker to run correctly. For the purposes of this lab, you can copy this example below. This job can replace the build job that was in the gitlab-ci.yml previously.
4. Click on the blue **Edit** button to begin editing your .gitlab-ci.yml file.
Note: For this lab, please pull up the following [Docs article](https://docs.gitlab.com/ee/user/application_security/container_scanning/) to assist you. This page displays instructions for how to include Container Scanning in your own CI. The page also displays GitLab supported languages and frameworks.
5. Under the **Requirements** section of the article- review the Docker Build section. We will need to add this to our pipeline in order for Container Scanning to run.
6. In your .gitlab-ci.yml file, add the following [snippet](https://gitlab-core.us.gitlabdemo.cloud/training-sample-projects/ps-classes/gitlab-security-essential-demos/container-and-dependency-scanning-demo/-/snippets/2086) for the Docker Build.
7. On the Docs page, scroll down and locate the **Configuration** section.
8. Copy the following line:
include:
    - template: Security/Container-Scanning.gitlab-ci.yml
9. Navigate back to the GitLab dashboard and locate your .gitlab-ci.yml file
10. **Paste the code** just copied below the sections leaving a space between blocks of code. Note: ensure this lines up with the template.
11. Click the green **Commit Changes** button to begin running your pipeline.
12. Add a message for your change.
13. Navigate to **Security & Compliance > Vulnerability Report** - In the scanner drop-down, select **Container Scanning** to see if your scan picked up any issues.
14. Review the **Security & Compliance > Configuration** page to ensure **Container Scanning** is enabled.

### SUGGESTIONS?

If you wish to make a change to our Hands on Guide for GitLab Security Essentials- please submit your changes via Merge Request!

