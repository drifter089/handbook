---
layout: handbook-page-toc
title: Core PM Responsibilities
description: >-
  Product Managers can do a lot of activities, this page summarizes the most
  essential aspects of their job.
---

## On this page
{:.no_toc .hidden-md .hidden-lg}

- TOC
{:toc .hidden-md .hidden-lg}

It has never been more [popular](https://medium.com/agileinsider/incredible-growth-in-demand-for-product-managers-in-the-us-but-not-necessarily-in-the-places-youd-936fec5c1932) to be a product manager,
but the responsibilities of a product manager can vary greatly between organizations and even within an organization.

## Core PM Responsibilities

As a product manager at GitLab, you are primarily responsible for:

1. Understanding and defining the problem of our users and customers
1. Building a solution that is loved by our users and customers
1. Ensuring our product is viable for GitLab

### How does a PM ensure they are solving a problem for our users?

PMs should spend a significant amount of time understanding the problems our users face. Deeply understanding the problem is the foundation for all other activities PMs take on; understanding the problem enables the PM to define the vision and prioritize effectively.

In order for a PM to deeply understand the problems our users are facing and determine which are the important problems to solve, they can do the following:

- Have a deep knowledge of each category's problem space
- Regularly talk with users and customers
- Communicate with users on issues and epics
- Work with Pre-Sales and Post-Sales to connect with customers and prospects
- Uncover insights through UX Research
- Use other [sensing mechanisms](/handbook/product/product-processes/#sensing-mechanisms). It is through user interactions that we can begin to understand what problems our users are facing and identify how we could make product improvements to help eliminate the pain points. These user interactions can present themselves in many different ways.

#### Interacting with our customers

**Regular Customer Calls**

As a PM, it's expected that you reach our to existing customers to check in regularly and understand how they are utilizing GitLab's existing features. These calls offer a unique opportunity to better understand our customer's use-cases, and further our understanding of how our our product and features play a direct role in their daily work. These calls also offer a great opportunity to discuss what is working well for them, and what areas are still painful. Identifying these pain points across multiple customers can start to help us form an understanding on areas where we can improve.

**Pre-sales / sales calls **

Some of our most constructive criticism comes from prospective customers who are considering switching to GitLab from one or many other tools. Working closely with our Technical Account Managers (TAMs) and Solution Architects (SAs) during proof of concept (POC) and proof of value (POV) opportunities provides valuable insight into where we may have new opportunities for solving customer problems.

Talking to those opportunities who may not choose our solution is extremely valuable as it gives a much different perspective of our product capabilities than talking to existing users.

**UX Research**

Collaborating with our UX Research team members to perform research into specific interactions will help us make our features easier to discover, and easier to use. These research opportunities can provide valuable feedback which can assist us in making key strategic decisions in product direction.

#### Making sense of the data

Customer conversations will identify all sorts of problems.

### How does a PM ensure we build lovable products?

Producing a lovable product requires more than a deep understanding of the problem. At GitLab, we build lovable products by adhering to our [values](/handbook/values/). PMs are expected to be the ambassador of the GitLab values by:

- Focusing on [results](/handbook/values/#results).
- Embracing [iteration](/handbook/values/#iteration). This is the secret to GitLab moving fast, get constant feedback, and maintain forward momentum given GitLab's huge [vision](/direction/#vision) and PMs play a large role in unlocking iteration as a competency.
- Being [transparent](/handbook/values/#transparency). This will enable both our development group to contribute and just as important, enable the wider GitLab community to contribute.
- Being [efficient](/handbook/values/#efficiency). PMs should advocate for the boring solution, optimize for the right group, be the manager of one, always write things down, so they can help their groups also be efficient.
- Being [collaborative]. PMs ultimately don't ship anything on their own. PMs need to be a great teammate so that the development group can produce great work.
- Being someone who helps make GitLab a work place of [diversity, inclusion, and belonging](/handbook/values/#diversity-inclusion), so that everyone can come to GitLab and do their best work.

### How does a PM ensure business viability for our product?

It is not sufficient to just know the problems. It is also insufficient to have a solution to the problem that our customers love. PMs also need to ensure that the solution is viable for GitLab.

- PMs participates in and follows the [product development flow](/handbook/product-development-flow/) so that their development group can consistently release features [every month](/releases/).
- PMs [determine the tiers of features](https://about.gitlab.com/handbook/ceo/pricing/#departments)
- PMs ensure that issues that impact GitLab are appropriately [prioritized](https://about.gitlab.com/handbook/product/product-processes/#prioritization)
## Core PM task list
In an ongoing effort to help product managers be more efficient and maximize time spent on high value activities in alignment with [core PM responsibilities](#core-pm-responsibilities), below is a list to clarify what actions are **required** vs. **recommended** for product managers. Over time, our goal is to  eliminate and automate any actions product managers currently have to do (due to tactical needs) that do not directly link to the core PM responsibilities defined above. 
> <i class="fab fa-gitlab fa-fw" style="color:rgb(252,109,38); font-size:1.25em" aria-hidden="true"></i> Denotes a **required** task. Unmarked tasks may be considered as recommendations.


| Daily | |
| <i class="fab fa-gitlab fa-fw" style="color:rgb(252,109,38); font-size:1.25em" aria-hidden="true"></i> Sample task 1 (required) | Description |
| Sample task 2 (not required) | Description |
| Respond to mentions / requests    | Todos / Slack - Filter out non-actionable, respond where necessary                        |
| Monitor in-progress efforts       | Monitor ongoing efforts and initiatives                                                   |
| Weekly                      |                                                                                           |
| Task                              | Description                                                                               |
| Sync meetings                     | Product Sync, Section Product Sync, EM Sync, UX sync, etc...                              |
| Traige issues                     | Triage issues that have never been looked at, or are in the backlog.                      |
| Review Metrics                    | Refresh data, look at trends                                                              |
| Customer Interaction              | Sales, Customer Success support, UX research                                              |
| Personal Development              | Manager 1:1, reading, courses, training                                                   |
|                                   |                                                                                           |
| Monthly Tasks                     |                                                                                           |
| Task                              | Description                                                                               |
| Release planning                  | Release planning issue, EM coordination                                                   |
| Release kick-off video            | Record & post video, update necessary issues                                              |
| Release Post Effort               | Ensure release posts MRs are created, ensure reviews are complete, ensure they are posted |
| Review and Update Direction Pages | Ensure direction pages are accurate and up to date                                        |
| Update PI pages                   | Prepare for PI review, update PI page, investigate any "odd" data                         |
| Plan / Direction Priorities       | Work to reconcile plan and direction across departments / stakeholders                    |
|                                   |                                                                                           |
| Quarterly                   |                                                                                           |
| Task                              | Description                                                                               |
| Contribute to OKR creation        | Contribute to OKRs                                                                        |
| Map work to OKRs                  | Ensure work can be tied to OKRs                                                    |
| Verify category maturity          | Check category maturity dates and update if necessary                                     |

## What is a PM not responsible for?

To deeply understand the problems to solve, to build a lovable product, and to ensure the product is viable is not easy. It requires the Product Manager to be tenacious, influential, technically savvy, entrepreneurial, strategic, and many more adjectives. To support Product Managers, many processes and activities have been created. However, those activities are not necessarily the PM's responsibility. GitLab Product Managers maintain autonomy on what they do to achieve their core responsibilities.

- Design and usability. The PMs partner with their designer counter parts who are the main DRIs for the design and usability.
- Architecture and implementation. The PMs partner with their engineering counter parts who are the main DRIs for developing our product.
