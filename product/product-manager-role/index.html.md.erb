---
layout: handbook-page-toc
title: The Product Manager Role at GitLab
---

## On this page

{:.no_toc .hidden-md .hidden-lg}

- TOC
{:toc .hidden-md .hidden-lg}

[**Principles**](/handbook/product/product-principles/) - [**Processes**](/handbook/product/product-processes/) - [**Categorization**](/handbook/product/categories/) - [**GitLab the Product**](/handbook/product/gitlab-the-product) - [**Being a PM**](/handbook/product/product-manager-role) - [**Performance Indicators**](/handbook/product/performance-indicators/) - [**Leadership**](/handbook/product/product-leadership/)

## Product Organizational Structure

The GitLab Product team includes team members at various levels of [Product Management job titles](/job-families/product/product-manager/) and [Product Management - Leadership job titles](job-families/product/product-management-leadership/). They map across our [organizational levels](/company/team/structure/#levels) with scope at various points in our [product hierarchy](/handbook/product/categories/#hierarchy) outlined in the table below.

* The product org abides by [GitLab's layer structure](/company/team/structure/#layers). Sometimes, there can be instances where peers across layers don't have the same title.

| Level | Job Titles| Hierarchy Scopes |
| ----- | ------------ | ---------------- |
| IC | [Product Manager](/job-families/product/product-manager/#intermediate-product-manager), [Senior PM](/job-families/product/product-manager/#senior-product-manager), [Principal PM](/job-families/product/product-manager/#principal-product-manager) | Group, Stage |
| Manager | [Group Manager Product](/job-families/product/product-management-leadership/#group-manager-product-gmp), [Director of Product](/job-families/product/product-management-leadership/#director-of-product-management) | Collection of Groups, Stage, Section |
| Director | [Director of Product](/job-families/product/product-management-leadership/#director-of-product-management), [Senior Director of Product](/job-families/product/product-management-leadership/#senior-director-of-product-management) | Section, Collection of Sections |
| Senior Leader | [VP](/job-families/product/product-management-leadership/#vp-of-product-management) | All Sections |
| Executive | [Chief Product Officer]() | Entire Function |

***

## How to work as a PM 

Your job as a PM is outlined in [Product Manager Reponsibilities](https://about.gitlab.com/handbook/product/product-manager-responsibilities/)

If you follow the [Product Principles](/handbook/product/product-principles) and [Product Processes](/handbook/product/product-processes) in our handbook, you won't be writing long, detailed
specs for a part of the product for next year. So how should you be spending your time?

Invest the majority of your time (say 70%) in deeply understanding the problem.
Then spend 10% of your time writing the spec _for the first iteration only_ and
handling comments, and use the remaining 20% to work on promoting it.

A problem you understand well should always have a (seemingly) simple or obvious
solution. Reduce it to its simplest form and only ship that as an [MVC](/handbook/product/product-principles/#the-minimal-viable-change-mvc).

Once you've shipped your solution, both you and the community will
have a much better idea of what can be improved and what should be prioritized
for future iterations.

As a PM, you're the person that has to kick-off new initiatives. You're not
responsible for shipping something on time, but you _are_ responsible for taking
action and setting the direction. Be active everywhere, over-communicate, and
sell the things you think are important to the rest of the team and community.

As a PM, you need to set the bar for engineering. That is, to push engineering and
the rest of the company. You almost want engineering to complain about the pace
that product is setting. Our default instinct will be to slow down, but we can't
give in to that.

As a PM you don't own the product; ask other people for feedback and give
team members and the community the space to suggest and create things without your
direct intervention. It's your job to make sure things are decided and
planned, not come up with every idea or change.

### Where should you look when you need help?

- The first thing you should do is read this page carefully, as well as the
[general handbook](/handbook/).
- You can ask questions related to Product in the `#product` Slack channel.
- General questions should be asked in `#questions`.
- Specific Git related questions should be asked in `#git-help`.
- HR questions should be asked in `#peopleops`.

### Responsibilities and Expectations

The responsibilities for [Product Managers, Sr. Product Managers, and Principal Product Managers](/job-families/product/product-manager/), [Group Manager, Product Management](/job-families/product/product-management-leadership/#group-manager-product-gmp)
[Director of Product](/job-families/product/product-management-leadership/#director-of-product-management) and
[VP of Product](/job-families/product/product-management-leadership/#vp-of-product-management) are outlined in our job families pages.

The progression of responsibilities allocation between tactical, operational and strategic
is well illustrated by this helpful chart.

![GitLab PM Responsibility Allocation Chart](/handbook/product/pm-allocation.png)

_[Source File](https://docs.google.com/spreadsheets/d/19gAgPJVdXfBpXiFOlT1WqZLJB_eFU7W7slmAzodEuDM/edit#gid=1012729771). Note - Thanks to [Melissa Perri](https://twitter.com/lissijean/) for the inspiration_

In addition, as a Product Manager you're expected to:

- Use the product and deeply understand the features you're responsible for.
- Follow the issues you've been involved with / are assigned to as a PM. That
includes reading all comments. Use email notifications for this.
- Make sure the issue description and title is updated when necessary. It
should always reflect the current state of the issue.
- Make sure issues are moved forward when needed. You should not only avoid
being the bottleneck, you should also be the person moving issues forward when
they get stuck or overlooked.
- Make sure features solve the original problem effectively.
- Make sure features are complete: documentation, marketing, API, etc.
- Know when to cut corners and when not to. If we merge documentation a day
later, that's usually acceptable. Conversely though, learning from a customer
that documentation is lacking is not.
- Excite and market new features and changes internally and externally.
- Help build a plan and strategy for GitLab and GitLab's features.
- Understand deeply whatever it is you're working on. You should be spending a
lot of time learning about your subject matter.
- Have regular meetings (at least once a week) with customers.
- Make sure marketing materials related to your work are up to date.
- Ensure that `data/categories.yml` is up to date, including accurate links based on the defined link [hierarchy](/handbook/product/categories/).

Occasionally, Product Managers are asked to perform the role of "Life Support" Product Manager for
a group. When doing so please refer to the [Life Support PM expectations](/handbook/product/product-processes/#life-support-pm-expectations).

As we grow, Product Managers can be listed across multiple stages and be asked to
perform the role of Product Manager across split or multiple teams in an "Interim" basis. While
temporary and based on future hiring, these positions are not considered
"Life Support" and thus the standard Responsibilities and Expectations apply.

### Scope of responsibilities

The product team is responsible for iteration on most of GitLab's products and
projects:

- GitLab CE and EE
- GitLab.com
- about.gitlab.com
- customers.gitlab.com
- version.gitlab.com
- license.gitlab.com

This includes the entire stack and all its facets. The product team needs to
weigh and prioritize not only bugs, features, regressions, performance, but also
architectural changes and other aspects required for ensuring GitLab's excellence

#### Cost profile and user experience

Every Product Manager is responsible for the user experience and cost profile of their product area regardless of how the application is hosted (self-managed or gitlab.com). If a feature is unsustainable from a cost standpoint, that can erode the margins of our SaaS business while driving up the total cost of ownership for self-managed customers. If a feature is slow, it can impact the satisfaction of our users and potentially others on the platform.

There are a few questions a Product Manager should ask when thinking about their features:

* What are the costs associated with my product area? What is the impact on the margin for each tier of GitLab.com?
  * Consider network, compute, and storage costs
* Are there tools in place to help GitLab, Inc and self-managed admins optimize the cost footprint for running GitLab (e.g. node rebalancing, transitioning objects to less costly storage classes, garbage collection capabilities)
* Are there features and default settings that help users stay within their [CI and Storage limits](https://about.gitlab.com/pricing/)?
* Are there configurable [application limits](https://about.gitlab.com/handbook/product/product-processes/#introducing-application-limits) in place for admins to enhance the availability and performance of GitLab and reduce [abuse vectors](https://about.gitlab.com/handbook/engineering/security/security-operations/trustandsafety/#examples-of-common-forms-of-abuse-include-but-are-not-limited-to)?
* What is the experience of users when interacting with these features on GitLab.com? Is it fast and enjoyable?

These items do not all need to be implemented in an MVC, though potential costs and application limits should be considered for deployment on GitLab.com.

Product Managers should also regularly assess the performance and cost of features and experiences that they are incrementally improving. While the MVC of the feature may be efficient, a few iterations may increase the cost profile.

##### Tools to understand operational costs

There are a few different tools PM's can utilize to understand the operational costs of their features. Some of these are maintained by Infrastructure, based on the operational data of GitLab.com. Others tools, like usage ping, can be utilized to better understand the costs of our self-managed users. Ultimately, each product group is responsible for ensuring they have the data needed to understand and optimize costs.

* Useful Dashboards to Visualize Infrastructure Costs:
  * [Overall GitLab.com GCP Costs](https://app.periscopedata.com/app/gitlab/742611/WIP:-GCP-Cost-Dashboard)
  * [Group Cost PIs](https://app.periscopedata.com/app/gitlab/744908/Group-GCP-Cost-PI's)
  * [GitLab.com Storage Costs](https://app.periscopedata.com/app/gitlab/690541/WIP:-GitLab.com-Storage-Cost-Stats)
  * [GitLab.com CI Costs](https://app.periscopedata.com/app/gitlab/690666/WIP:-GitLab.com-CI-Cost-Stats)
* [Access to Billing Console](https://console.cloud.google.com/billing/) ([Access Request](https://about.gitlab.com/handbook/business-ops/team-member-enablement/onboarding-access-requests/access-requests/) required)
* [Usage ping](https://docs.gitlab.com/ee/development/usage_ping/)
* Your Engineering Manager, #infrafin on Slack, and the broader GitLab team

##### Links to Learn more about Infrastructure cost management initiatives

* [Infrafin Board Workflow](https://gitlab.com/groups/gitlab-com/-/boards/1502173?label_name[]=infrafin)
* [Infrafin Board by Group](https://gitlab.com/groups/gitlab-com/-/boards/2054211?label_name[]=infrafin)
* [Infrafin Board by Savings Amount](https://gitlab.com/groups/gitlab-com/-/boards/992233?&label_name[]=infrafin)
* [Infrafin Cost Management Handbook Page](https://about.gitlab.com/handbook/engineering/infrastructure/cost-management/)

##### Tools to understand end user experience

* [Snowplow data](https://about.gitlab.com/handbook/business-ops/data-team/platform/snowplow/) on GitLab.com
* Quarterly NPS and SUS surveys
* [Page load performance](../product-processes/#page-load-performance-metrics)

### Direction

Our product wide, section, stage and category direction pages can be found from our [Direction](/direction/) page.

As this document and the [direction page](/direction/) shows,
there are a million things we want to do.
So, how do we prioritize them and schedule things properly?
A [product group](/company/team/structure/#product-groups)'s [PM is the DRI for prioritization](#pm-em-ux-and-qe-quad-dris) and per our DRI definition they do not [owe an explanation for their decisions](/handbook/people-group/directly-responsible-individuals/#empowering-dris-no-explanation-needed) because we don't want PMs to fall into a perpetual loop of explaining and prefer a [bias for action](/handbook/values/#bias-for-action). However, [one responsibility of a PM](/job-families/product/product-manager/#responsibilities) is to build rapport and align your stakeholders on priorities. It's almost always in a PMs best interest to explain why they are making prioritization calls.

### Important dates PMs should keep in mind

**4th of the Month:**

Draft of the issues that will be included in the next released (released 22nd of next month).
Start capacity and technical discussions with engineering/UX.

**12th of the Month:**

Release scope is finalized. In-scope issues marked with milestone
Kickoff document is updated with relevant items to be included.

**15th of the Month:**

Group Kickoffs calls recorded and uploaded by the end of the day.

Also see [Product Development Timeline](/handbook/engineering/workflow/#product-development-timeline).

## Product Management Career Development Framework

<kbd class="required">Required 🔎</kbd><br>
<br>
We track progress through the skills required to be a product manager at all levels via the Product Management Career Development Framework (CDF). The single source of truth for that framework is the table below but you can use this [GoogleSheet template](https://docs.google.com/spreadsheets/d/1NaqSgu_1IcL_DYRHjrDGsKLooSykpewD3QYU2OZR5jc/edit#gid=1091464991) to track your career development with your manager. We are transitioning the CDF to include the company-wide standard of evaluating performance per the [Performance/Potential Matrix](https://about.gitlab.com/handbook/people-group/performance-assessments-and-succession-planning/#the-performancepotential-matrix). In this model, performance will be considered in categories of Developing, Performing, and Exceeding, alongside evaluation of Low, Medium and High potential instead of using Growing, Learning, Thriving, and Expert categories of the [compa-ratio](https://about.gitlab.com/handbook/total-rewards/compensation/compensation-calculator/#compa-ratio).

| IC Title | PM | Sr. PM | Principal PM | |

| Manager Title |  |  | Group Manager PM | Director PM |
| ------------- | --- | --- | ---------------- | ----------- |
| **Validation Track Skills** | Adept at qualitative customer interviewing. Familiar with prioritization frameworks like RICE to organize opportunity backlogs. Capable of deriving key insights and patterns from customer interviews, and using that input to clarify problem statements. Proficient at story mapping, to break epics down into smaller [Minimal Viable Change (MVC)](/handbook/values/#minimal-viable-change-mvc) issues. Proficient at collaborating with Design on prototypes to bring potential solutions to life. | Skilled at qualitative customer interviewing. Excellent at deriving key insights and patterns from customer interviews, and using that input to clarify problem statements. Skilled at story mapping, to break epics down into smaller MVC issues. Excellent at collaborating with Design on prototypes to bring potential solutions to life. | Skilled at qualitative customer interviewing. Skilled at story mapping, to break epics down into smaller MVC issues. Capable of teaching product validation techniques to others. | Ensures consistent execution of validation track skills across a large team. |
| **Build Track Skills** | Adept at breaking epics and issues down into MVC's. Knowledgeable about GitLab's product and the relevant product domain(s). Knowledgeable about GitLab's architecture, API's, and tech stack. Capable of running a demo anytime. Able to make highly informed prioritization & tradeoff decisions with engineering. Able to discuss & evaluate technical architecture recommendations from eng. Responsible for the health of working relationships with peers in the Group. Familiar and comfortable with agile development methodologies. | Excellent at breaking epics and issues down into MVC's. Deep familiarity with GitLab's product and the relevant product domain(s). Deep understanding of GitLab's architecture and tech stack. Able to elevate performance of the Group through excellent PM outputs. | Expert at breaking epics and issues down into MVC's. Expert in the relevant product domain(s) and capable of teaching others about the domain. Responsible for the health of working relationships with fellow Engineering Managers. | Ensures consistent execution of build track skills across a large team. Responsible for the health of working relationships with fellow Engineering Directors. |
| **Business Skills** | Understands and communicates the business value of epics and issues. Sets success metrics for epics and issues, and tracks metrics post-launch to guide investment in iterative improvements. Spends up to 20% of time researching & defining category vision & strategy. | Able to ensure activities are consistent with GitLab's go-to-market and business model. Can balance build, buy and partner options for solving customer problems. Can identify new market opportunities & author business cases, as well as forecast the approximate benefits of new features. Spends up to 30% of time researching & defining category vision & strategy. | Expert at business case creation. Capable of managing business results across a range of product domains. | Works cross-stage and cross-functionally to ensure an excellent end-to-end customer experience. Excellent at understanding and managing the business impact across a wide range of product domains. Capable of making key pricing & packaging recommendations. |
| **Communication Skills** | Capable written and verbal communicator internally and externally. Drives clarity in area. Trusted resource for customer calls and meetings. Builds rapport with stakeholders to align around priorities. Self aware and understands how their interactions impact others. Takes action to improve behavior based on impact to others. | Capable of representing GitLab externally at trade shows, customer events, conferences, etc. Solid presentation skills at all levels of the company. Appropriately influences & persuade others to a course of action. | Recognized as a thought leader internally and externally. Excellent presentation skills at all levels of the company. Escalates issues cleanly to appropriate levels of authority when decisions or progress are blocked. | Visible leader across teams. Establishes compelling team purpose that is aligned to the overall organizational vision. Inspires broader team to achieve results. Identifies disconnects to vision and takes appropriate action. |
| **People Management Skills** | N/A | N/A | Aligns team with larger Stage vision and goals. Translates and aligns strategy in a meaningful way for team, building a shared understanding of team goals and targets. Uses situational leadership techniques to provide appropriate level of guidance and latitude to team members. Proactively identifies and fills talent gaps. Adept at caring personally for team members and providing candid real-time feedback. | Aligns team with larger Section vision and goals. Provides appropriate level of guidance and latitude to managers and individuals. Experienced at hiring and at managing out underperformance. Excellent at caring personally for team members and providing candid real-time feedback. |
| **Typical Reporting Structure** | Reports to a Director or Group Manager | Reports to a Director or Group Manager | Reports to a Director or VP | Reports to VP |
| **Typical Experience** | Two to four years of relevant experience or equivalent combination of experience and education. | Four to six years of relevant experience or equivalent combination of experience and education. | Eight to ten years of experience with at least one year of people management responsibility. | Ten to twelve years of experience with at least four years of people management responsibility. |

***

### Performance/Potential Assessment

Product Management Leadership will perform CDF reviews with their team members on a regular cadence agreed upon with their team member, to happen at every 2 to 3 months, and no less frequently than every 3 months. We encourage limited flexibility based on manager discretion because team members have different career goals, growth cadences and product challenges they may want to align with their CDF. Product Management Leadership should consider creating a recurring meeting dedicated to this topic rather than utilizing existing 1:1 meetings.

#### What is the expected outcome of a CDF Review?
CDF reviews should result in actionable improvement focus areas for the product manager. When conducting a CDF review, managers should consider drilling into specific items within the PM's purview to highlight where the team member can focus on improving. [PM competencies](#competencies) are also valuable for identifying improvement areas.

#### Topics for Discussion in CDF Reviews by Track

##### CDF Topics For Product Managers
Responsibilities outlined in the [Product Manager Job Family page](https://about.gitlab.com/job-families/product/product-manager/#role).

**Validation Track Skills**
* Partnership with design
* Opportunity Canvas
* Sensing mechanisms
* Self learning
* Persona understanding
* Using feedback from PI
* Discovery iteration

**Build Track Skills**

* Issue crispness
* Development metrics (MR rate)
* Iteration
* Developer stakeholder rapport
* Start with proposals
* Product group cohesion
* Roadmap
* Global optimization

**Business Skills**

* Performance indicators
* Competitive analysis
* Tiered strategy
* Adoption funnel
* Direction updates
* Buyer understanding
* Partnership with GTM

**Communication Skills**

* Async communication with a bias towards action
* Verbal presentation
* Representing GitLab roadmap
* Non-R&D stakeholder rapport
* Ability to influence

**People Management Skills**

* N/A

##### CDF Topics For Group Managers of Product
Responsibilities outlined in the [Group Manager of Product Job Family page](/job-families/product/product-management-leadership/#group-manager-product-gmp).

**Validation Track Skills**
* Coaching of team members on validation track skills
* Strategic research
* Driving cross-group connections in service of a single-app experience
* Partnership with Design leadership

**Build Track Skills**
* Coaching of team members on build track skills
* Global optimization across product groups
* High performance of Product Groups

**Business Skills**
* Coaching of team members on business skills
* Direction updates
* Adoption Funnel across product groups
* Partnership with GTM via Use Case assignment
* Deep understanding, synthesis, and communication of competitive landscape and emergent solutions 
* Business Cases for new investment
* Acquisitions

**Communication Skills**
* Coaching of team members on communication skills
* Presenting broader GitLab Roadmap
* Representing your section

**People Management Skills**

* Career Coaching
* Performing CDF Reviews
* Enabling direct reports to be more efficient
* Strategy alignment
* Rapport with direct reports

### Evaluating Product Manager's potential
When evaluating a product manager's potential, in addition to the [generic information](/handbook/people-group/performance-assessments-and-succession-planning/#what-is-potential) outlined, we also want to evaluate potential based on the unique and outsized impact PMs can have. We acknowledge that the evaluation will remain more qualitative than quantitative, but rather than shy away from making an evaluation, we will lean in using the information below.

We can think about the Product Manager's potential primarily on two axis: value creation and leadership.

#### Value Creation
Product managers are in the business of creating value, measurable by [Product KPIs](https://about.gitlab.com/handbook/product/performance-indicators/#structure). They prioritize the most important thing to unlock the most value at the intersection of the business and the user or buyer.

We expect product managers to create value across the business by excelling at execution in at least the following levels. When thinking of a PM's potentials, consider their capacity to expand their influence beyond their current level.

|  **Level** | **Value created at..** |
| --- | --- |
| **PM** |  features and categories |
| **Senior PM** |  features, categories and stage |
| **Principal PM** |  features, categories, stage, and cross-stage |
| **GPM** |  stage and cross-stage |
| **Director** |  cross-stage, cross-department |
| **VP and up** |  company-wide or new business/industry |

#### Leadership
As product managers grow in experience and seniority, they are tasked with shaping alignment, producing results, and leading with increasing responsibilities. Understanding how to set the tone with vision and strategy, and knowing how to control output in a system comprised of people, culture, technology, and process is how product managers lead.

We expect product managers to be a leader at the following levels. When evaluating potential, consider the PM's capacity to be a leader with more scope.

|  **Level** | **Leadership level** |
| --- | --- |
| **PM** |  product group |
| **Senior PM/Principal PM** |  product Group, stage, and cross-group alignment |
| **GPM/Director** |  multiple groups and stages |
| **Senior Director** |  cross-department |
| **VP** |  company-wide |

#### A framework for evaluating potential
It can be challenging objectively evaluating product managers for categorization of Low, Medium and High potential as suggested in the [Performance/Potential Matrix](https://about.gitlab.com/handbook/people-group/performance-assessments-and-succession-planning/#the-performancepotential-matrix). Consider using the following framework to rank a PM's potential. Assign a ranking, 1 (Low) - 5 (High) to each attribute below. Add up the rankings for a total score. A score between 5-11 is low potential, 12-18 is medium potential, 19-25 is high potential.

| Attribute | Reasoning|
| ------ | ------ |
| Self-motivation and drive | The intrinsic drive enables PMs to learn, be passionate, and ultimately be effective. |
| Influence | High potential PMs build rapport with their team, which supports accomplishing results.|
| Resourcefulness | PMs should seek to learn and grow. What they learn is ultimately meaningful if the learning can be applied.|
| Ambitious | High potential PMs stretch themselves and make themselves available to new responsibility.|
| Self-awareness | A large part of leadership is knowing where you are not strong and building relationships to fill in the gaps. |

##### Make evaluating potential actionable
Product managers are typically driven and high performing individuals, and we often overestimate our own abilities relative to others. Seeing even a medium potential may be disappointing to many PMs. It should be made clear that a perceived lower than desired potential does not mean the PM is not valued and not performing to expectation. Managers should use a [CDF Review](https://about.gitlab.com/handbook/product/product-manager-role/#cdf-reviews) to discuss the scoring of the potential. The outcome should be to identify opportunities for the PM to grow and areas for the manager to mentor and coach the PM.

## Competencies

Product Managers must be able to demonstrate a variety of skills across our CDF. We provide additional career development guidance by listing priority [competencies](/handbook/competencies/) for each CDF category.

At the moment we are working building out our Product Management Competencies.

### Validation Track Competencies

The [validation track](/handbook/product-development-flow/#validation-track) is the first phase of GitLab's Product Development Workflow. Industry wide, this track is commonly referred to as ideation and research. This phase lays the foundation for designs and solutions. When the business and users problems are well understood, the more likely it is that the product will solve the user's problem and the higher likelihood that those users will enjoy the solution.

Using a competencies model will help Product Managers understand the expectations of the validation track at each level in the Product Management organization. The competencies in the validation track are:

1. Customer Interviewing
1. Creating an Opportunity Canvas
1. Creating a Storyboard Designing Prototypes
1. Engaging Analysts via Inquiries

**Note:** We've collected [various learning and development materials to support your development in this area](./learning-and-development/#discovery).
{:.alert .alert-info}

#### Customer Interviewing Competency

Customer interviewing is essential to clearly defining the user's needs, problems, and jobs to be done. At GitLab, customer interviewing is typically done in partnership with User Experience, including Product Design and User Research. This competency will help Product Managers get stronger at problem identification and curating a solid foundation for user stories, prototypes and solutions to be built upon.

| **Level** | **Demonstrates Competency by...** | **Assessment** |
| ----- | ----------------------------- | ---------- |
| **PM** | Adept at qualitative customer interviewing. Uses templates and already available resources for discussion guides. 50% or greater reliance on UX research for interviewing. Capable of deriving key insights and patterns from customer interviews, and using that input to clarify problem statements. Potentially misses cross-stage or outside primary persona or use cases. Capable of completing the guidelines referenced in the [Validation Track](/handbook/product-development-flow/#validation-track) handbook page. Low to moderate confidence in conducting and moderating [user interviews](/handbook/engineering/ux/ux-research/#for-user-interviews). Aware of [RICE](https://www.productplan.com/glossary/rice-scoring-model/) as a priority setting tool and can apply the framework assisted. | [Customer Interview Assessment - Individual Contributors](https://forms.gle/zMyvXPE8EeSvjbVg9) |
| **Sr. PM** | Skilled at qualitative customer interviewing. Actively improves existing resources and templates. 30% or less reliance on UX research for interviewing. Excellent at deriving key insights and patterns from customer interviews, and using that input to clarify problem statements. Independently identifies and brings in cross-stage representation during interviews with non-primary personas or use cases.<br>Skilled at applying and executing against the [Validation Track](/handbook/product-development-flow/#validation-track) in the handbook. Moderate to high confidence in conducting or moderating [user interviews](/handbook/engineering/ux/ux-research/#for-user-interviews) independently. Capable of applying [RICE](https://www.productplan.com/glossary/rice-scoring-model/) as a priority setting tool unassisted. | [Customer Interview Assessment - Individual Contributors](https://forms.gle/zMyvXPE8EeSvjbVg9) |
| **Principal PM/ Group Manager PM** | Highly skilled at qualitative customer interviewing. Coaches and continuously seeks feedback for existing resources on interviewing. Minimal reliance on UX research for interviewing and leverages UX research for consultation of research strategy. Contributes to goal setting and OKR development across the team. Seeks opportunities for cross-stage collaboration and validation from ancillary use cases or personas. Iterates and engages with the [Validation Track](/handbook/product-development-flow/#validation-track) in the handbook as new learnings arise. Typically conducts or moderates [user interviews](/handbook/engineering/ux/ux-research/#for-user-interviews) independently. Capable of applying [RICE](https://www.productplan.com/glossary/rice-scoring-model/) as a priority setting tool unassisted. | [Customer Interview Assessment - Individual Contributors](https://forms.gle/zMyvXPE8EeSvjbVg9)<br>Customer Interview Assessment - People Leaders - Coming Soon |
| **Director PM** | Ensures consistent execution of validation track skills across product groups. Seeks feedback and continuous refinement of validation processes. Measures and evaluates validation track performance on SMAU to ensure the process is delivering results for the business. | Customer Interview Assessment - People Leaders - Coming Soon |
| **Senior Director PM** | In addition to upholding director requirements, senior directors work to ensure the validation track appropriately includes external teams like UX, UX research, Design, or Engineering, as necessary. Developing awareness and driving collaboration with the track within R&D. | Customer Interview Assessment - People Leaders - Coming Soon |
| **Vice President PM** | In addition to the requirements of the senior director requirements, vice president’s proactively inform the validation process, goals, and frameworks with context from the global company and external stakeholders, like investors. | Customer Interview Assessment - People Leaders - Coming Soon |
| **EVP/Chief Product** | In addition to upholding the requirements of a VP, the executive vice president should advocate for the validation framework and goals across the company. Comfortable representing the way product decisions are informed and designed within and outside of the company. | Customer Interview Assessment - People Leaders - Coming Soon |

#### Opportunity Canvas Competency

Determining if an opportunity is worth pursuing and whether to solve it “now” is a critical product management skill. Being able to clearly communicate a problem, who is experiencing it, the potential reach of a solution (customers or market size), and GitLab’s vision for solving it (both in the short and long term) is critical to validating if an opportunity is worth pursuing. GitLab uses the Opportunity Canvas as this communication artifact, alongside formal Opportunity Canvas reviews to vet larger opportunities like [new categories](https://about.gitlab.com/handbook/product/product-processes/#adding-a-new-category-to-a-stage) or [stages](https://about.gitlab.com/handbook/product/product-processes/#adding-a-new-stage). This competency helps Product Managers get stronger at articulating problems and solution spaces. Used correctly, the Opportunity Canvas determines both the merit and urgency of solving a problem and frames and phases the solution. 

This [Opportunity Canvas walkthrough](https://youtu.be/ZXbwtLoxPjM) is an example of how to effective complete the business case portions of an Opportunity Canvas. 

| **Level** | **Demonstrates Competency by...** | **Assessment** |
| ----- | ----------------------------- | ---------- |
| **PM** | Proficient with Opportunity Canvas creation for point problems ([Group Wikis](https://gitlab.com/gitlab-org/gitlab/-/issues/13195) for example). Can identify and articulate problems and workarounds for existing categories in customer interviews as well as research. Can estimate the market size for an opportunity with assistance. Depends on their Engineering stable counterpart to story map possible solutions and identify an MVC approach. Can identify measures of success for an MVC and depends on their Engineering stable counterpart(s) or manager to identify a test strategy to iterate to an optimal product outcome. Relies on stable counterparts for messaging and go to market plan section of the canvas. Capable of completing the guidelines referenced in the [Validation Track](https://about.gitlab.com/handbook/product-development-flow/#validation-track) handbook page. | TBD |
| **Sr. PM** | Expert at Opportunity Canvas creation for multi-point problems ([Security Dashboards for example](https://docs.gitlab.com/ee/user/application_security/security_dashboard/index.html)). Can identify and articulate problems and workarounds for new categories and features from customer interviews and research. Can estimate the market size for an opportunity with little assistance. Can facilitate story mapping sessions alongside stable counterparts to identify an MVC approach. Identifies measures of success and ideal product outcomes primarily alone. Adept at iterating to an optimal product outcome(s) through testing. Is the primary author for messaging and go to market plan for Opportunity Canvas. Actively improves existing resources and templates. Skilled at applying and executing against the [Validation Track](https://about.gitlab.com/handbook/product-development-flow/#validation-track) in the handbook. | TBD |
| **Principal PM/ Group Manager PM** | Expert at Opportunity Canvas creation for solution-level problems. Solution-level is a reference to the breadth and complexity (e.g. https://about.gitlab.com/solutions/)  Can identify and articulate problems and workarounds for new categories (or unknown features) from customer interviews as well as research. Can estimate the market size for an opportunity with no assistance. Can facilitate story mapping sessions alongside stable counterparts to identify an MVC approach. Identifies measures of success and ideal product outcomes alone. Adept at iterating to an optimal product outcome(s) through testing. Is the primary author for messaging and go to market plan for Opportunity Canvas. Understands and can articulate how different strategies apply to different personas. Reviews and coaches PMs on canvases for point and multi-point problems across the company. Iterates and engages with the [Validation Track](https://about.gitlab.com/handbook/product-development-flow/#validation-track) in the handbook as new learnings arise. | TBD |
| **Director PM** | Ensures consistent execution of validation track skills across product groups. Seeks feedback and continuous refinement of validation processes. Measures and evaluates validation track performance on SMAU to ensure the process is delivering results for the business. Expert at Opportunity Canvas and story map creation for full product level problems like [Value Stream Management](https://about.gitlab.com/solutions/value-stream-management/).| TBD |
| **Senior Director PM** | In addition to upholding Director requirements, Senior Directors work to ensure the validation track appropriately includes external teams like UX, UX research, Design, or Engineering, as necessary. Developing awareness and driving collaboration with the track within R&D. | TBD |
| **Vice President PM** | In addition to the requirements of the Senior Director requirements, Vice Presidents proactively inform the validation process, goals, and frameworks with context from the global company and external stakeholders, like investors. | TBD |
| **EVP/Chief Product** | In addition to upholding the requirements of a VP, the Executive Vice President should advocate for the validation framework and goals across the company. Comfortable representing the way product decisions are informed and designed within and outside of the company. | TBD |

### Business Competencies
Product Managers are responsible for driving the success for a product area. Understanding market dynamics along side the ability to organize, influence, and iterate to reach the desired outcomes is essential.

**Note:** We've collected [various learning and development materials to support your development in this area](./learning-and-development/#business-acumen).
{:.alert .alert-info}

#### Understanding Buyer Based Tiering
GitLab has an [Open Core](https://en.wikipedia.org/wiki/Open-core_model) business model and generate the majority of revenue from [paid tiers](/pricing/). While general pricing decisions are made by the CEO, [determining pricing tier for product features](/company/pricing/#departments) is an important aspect of the Product Manager's job. We use a [buyer based tiering](/company/pricing/#buyer-based-tiering-clarification) model to determine which of the [four tiers](/company/pricing/#four-tiers) a feature belongs to. Being able to clearly define and articulate pricing decisions and strategy is a critical competency for PMs to master in order to influence the success of GitLab's business.

|  **Level** | **Demonstrates Competency by...**| **Assessment** |
| --- | --- | --- |
|**PM**| Are the pricing expert for their respective groups. Comprehends impact of features on pricing and capable of making informed decisions on feature alignment tier with minimal assistance. Understands the GitLab business model and can explain why GitLab is [sold as a suite](/company/pricing/#only-sell-a-suite). Leads group to fulfill GitLab's [stewardship promise](/company/stewardship/#promises). Adept at applying [buyer based tiering](/company/pricing/#buyer-based-open-core) when determining pricing tiers. When necessary, prioritizes [quickly moving features down tiers](/company/pricing/#if-a-feature-can-be-moved-down-do-it-quickly). Aware that placing a feature on a lower tier is not a [two-way-door decision](/handbook/values/#make-two-way-door-decisions) since features cannot move up in tier. Active in learning the buyer personas and common go-to-market motions for relevant categories and stages so that they can prioritize the right features in line with GitLab's [pricing philosophy](https://about.gitlab.com/company/pricing/#pricing-philosophy). | TBD |
|**Sr. PM**| Skilled at applying buyer based tiering when determining the pricing tier for a feature. Thinks holistically and leverages [capabilities](/company/pricing/#capabilities) to drive adoption for relevant features in paying tiers. Builds logical ramps to enable customers to move up in tier by prioritizing features valued by [advocates and champions](/handbook/sales/sales-operating-procedures/facilitate-the-opportunity/#312-finding-your-champions). Provides guidance and coaching to team members and fellow Product Managers to help drive consistency in tiering strategy. | TBD |
|**Principal PM/ Group Manager PM**| Highly skilled at applying buyer based tiering when determining the pricing tier for a feature. Deeply familiar with the buyer persona and go-to-market motion in relevant stages or categories and can identify and lead their group to find the right balance between [revenue, cost, and value](/company/pricing/#when-is-a-dollar-not-a-dollar) for GitLab and its customers. Supports the [hybrid sales model](/company/pricing/#hybrid-sales-model) by simultaneously building a pipeline of self-service GitLab users with useful features in free and premium and provide higher tier value by building indispensable enterprise features and cross-stage integrations. | TBD |

|**Director PM**| Ensures consistent application of buyer based tiering across product stages. Coaches Product Managers on market-specific buyer needs and go-to-market strategy. Applies [consumption pricing principles](/company/pricing/#consumption-pricing-principles) to help simplify pricing and make GitLab more scalable. Ensures [tiering and pricing changes](https://gitlab.com/gitlab-com/Product/-/issues/new?issuable_template=Feature-Tier-Or-Pricing-Change) do not have any preventable negative financial or business model impact. | TBD |

### Communication Competencies

[Product Managers communicate](/handbook/product/product-processes/#communication) to various audiences across an array of medium. As a result the set of communication competencies for Product Managers is more diverse than those for other positions.

**Note:** We've collected [various learning and development materials to support your development in this area](./learning-and-development/#communication).
{:.alert .alert-info}

#### Writing to Inspire Action Competency

[Writing to inspire action](/handbook/product/product-processes/#writing-to-inspire-action) is a critical competency for PMs in order to facilitate a bias towards action within their [Product Groups](/company/team/structure/#product-groups). PMs communicate with a wide variety of audiences one key to inspiring action via your writing is focusing on what your reader values.

| **Level** | **Demonstrates Competency by...** | **Assessment** |
| --- | --- | --- |
| **PM** | Consistently directing async communication towards actionable outcomes in issue discussions. You strive to minimize uncertainty by not leaving questions and discussion points unaddressed. When you respond, ask yourself before publishing a comment - "Will this get us closer to the goal of shipping something valuable for our customers?". You can do this by using phrases like - "What is the most minimal thing we can do to take a step in that direction?" , "How about X as an alternative?" and "Let's save that for a future iteration."  | Writing to Inspire Action Assessment coming soon |
| **Sr. PM**| Proactively intervening when async communication becomes drawn out by focusing on boring solutions, starting with a proposal, garnering a sense of urgency, and taking a bias towards action. You can spot these by looking for long single comments and multiple comments back and forth. You can respond with - "I've updated the proposal with what is being discussed, let's respond to that new proposal.", "I don't think this dialog is moving us forward, can we get back to the problem statement at hand?" and "I've removed that part of the proposal to stay focused on what we can delivery quickly." | Writing to Inspire Action Assessment coming soon |
| **Principal PM/ Group Manager PM**| Coaches others by taking advantage of teachable moments to highlight how team members could better communicate to inspire action in others. It's best to do this in private but you can spot them when you see other team members continuing long-running dialog despite it no longer being action oriented. | Writing to Inspire Action Assessment coming soon |

#### Communicating to Internal Executives

In any position, communicating to internal executives can be intimidating. As Product Managers at GitLab, there are many responsibilities assigned to you as the DRI for your scope. One of those responsibilities is to educate others in the company as the subject matter expert for how to best pursue our product goals. That includes senior executives. Most have the benefit of a more global perspective than yours but _none_ have put more thought into your product scope than you. When communicating it's important to seek to understand their global perspective and intent, and inform that intent and challenge their proposals based on your expertise. Your boss (or your bosses bosses boss) would be supremely disappointed if they know that you were directly actioning on their suggestions without first applying your knowledge and expertise, educating them directly and propsing alternatives.

Here's a [brief video](https://www.youtube.com/watch?v=MrWjb76ndSw&feature=youtu.be) of one of our Product Leader's perspectives on the topic.

| **Level** | **Demonstrates Competency by...** | **Assessment** |
| --- | --- | --- |
| **PM** | Showcasing an ability to seek first to understand a global perspective from an internal executive, assimilating that perspective (even if it means taking time in the direct conversation) and proposing alternatives. | TBD |
| **Sr. PM**| Communicating with confidence of current perspective in your assigned product scope and willingness to accept and assimilate new global perspectives | TBD |
| **Principal PM/ Group Manager PM**| Expanding your confidence beyond your assigned product scope and proactively educating others on new global perspective | TBD |

### Build Track Competencies
The [build track](/handbook/product-development-flow/#build-track) is the second phase of GitLab's Product Development Workflow. This track is the execution phase for the solutions that were validated and designed during the Validation track.

Using a competencies model will help Product Managers understand the expectations of the build track at each level in the Product Management organization. The competencies in the build track are:

1. Breaking Down Your Issues
1. Optimizing PM Inputs for Development Outputs
1. Understanding GitLab Architecture
1. Demoing GitLab

**Note:** We've collected [various learning and development materials to support your development in this area](./learning-and-development/#delivery).
{:.alert .alert-info}

#### Breaking Down Issues
The ability to break down larger features and functionality into small iterative issues is a key skill of any Product Manager. Breaking down issues into small iterations enables the development team to quickly understand what is the next most important iteration to execute.  To be skilled in this competency, a Product Manager must have a deep understanding of the customer problem to be solved, a strong familiarity with how GitLab is architected, and familiar with how software applications function.

|  **Level** | **Demonstrates Competency by...**| **Assessment** |
| --- | --- | --- |
| **PM** | Adept at breaking solutions down into issues for development. Learning the [iteration strategies](/handbook/product-development-flow/#iteration-strategies) outlined in the [Product Development Framework](/handbook/product-development-flow/) and implementing them in collaboration with their Engineering Manager. Active in their pursuit to understand underlying GitLab's [technical architecture](https://docs.gitlab.com/ee/development/architecture.html) to aid in their ability to make iterations as small as possible. Seeks feedback from their Engineering Manager, their team, and other Product Managers on issues during the planning process to make sure that they are considering the different ways that issues can be broken down and working to [lower their level of shame](/handbook/values/#low-level-of-shame)|TBD|
| **Sr. PM** |Skilled at breaking solutions down into issues for development. Regularly practices all [iteration strategies](/handbook/product-development-flow/#iteration-strategies) outlined in the [Product Development Framework](/handbook/product-development-flow/) without direct support from their engineering manager. Proactively requests reviews from Engineering to make sure that issues have been broken down and refined early in the [planning cycle](/handbook/product-development-flow/#build-phase-1-plan). Familiar with GitLab’s underlying [technical architecture](https://docs.gitlab.com/ee/development/architecture.html) and is able to leverage that knowledge when breaking down issues. |TBD|
| **Principal PM/ Group Manager PM** |Highly skilled at breaking solutions down into issues for development. All proposed Issues are [MVCs](/handbook/values/#minimal-viable-change-mvc) and logically broken down based on the [iteration strategies](/handbook/product-development-flow/#iteration-strategies) outlined in the [Product Development Framework](/handbook/product-development-flow/). Seeks ways in which to empower their team members to break down issues to extend themselves. Provides guidance and coaching to team members and fellow Product Managers in the ways that issues can be smaller.|TBD|
| **Director PM** |  Coaches Product Managers on the application of iteration strategies and how to achieve lower levels of shame. Ensures consistent issue breakdown across product groups. Seeks feedback to continuously refine the break-down process. Collaborates with Engineering Directors in their sections/stages to ensure [Development PIs](/handbook/engineering/development/performance-indicators/) are achieved via iteration.|TBD|
| **Senior Director PM** |TBD||
| **Vice President PM** |TBD||
| **EVP/Cheif Product** |TBD||

### People Management Competencies
Individual contributor product managers and managers of product managers are leaders of their respective group, stage, and section. Product managers influence and manage a diverse set of teammates. As a result, even individual contributors need to develop strong people management competencies.

**Note:** We've collected [various learning and development materials to support your development in this area](./learning-and-development/#team-management).
{:.alert .alert-info}

#### Managing Team Performance
Successfully [managing team performance](/handbook/people-group/learning-and-development/building-high-performing-teams/#what-makes-a-high-performing-team-at-gitlab) enables Product Managers to bring the most successful product to market in the most efficient manner.

|  **Level** | **Demonstrates Competency by...**| **Assessment** |
| --- | --- | --- |
| **IC PMs** | Sets the goals and priorities for their group. Exemplifies the [leadership qualities](/handbook/leadership/#gitlab-team-members) in their group. Skilled at [making decisions](/handbook/leadership/#making-decisions) to help unblock and enable groups to move forward confidently. Helps curate a team dynamic that has [direct communication](/handbook/leadership/#communication-should-be-direct-not-hierarchical) and is [open to feedback](/handbook/leadership/#giving-feedback). Exhibits the skills, behaviors to build [high performing teams](/handbook/people-group/learning-and-development/building-high-performing-teams/#what-makes-a-high-performing-team-at-gitlab). | TBD |
| **Manager of IC PMs** | [Hires and retains](/handbook/leadership/#talent-acquisition-and-retention) talented product managers. Enables Product Managers to be a [manager of one](/handbook/leadership/#managers-of-one). Helps direct reports thrive and improve via [CDF Reviews](#cdf-reviews). Coaches direct reports to stretch their skillset and sharpen existing skills. Are available to provide strategic or tactical input. Recognizes when [process](/handbook/leadership/#process-gets-a-bad-rep) can improve efficiency, is important for [global optimization](/handbook/values/#global-optimization), or is detrimental to autonomy and team performance and actively acts to address. Enables direct reports to [take time off](#taking-time-off) yet maintain group's forward momentum. | TBD |
| **Manager of PM Managers** |TBD||

### Future Competencies

Here is our prioritized list of future competencies. We'll add them to our competencies list by starting with the top priority in each skill category. We'll add more detail and content for each one of these as we add them to the PM competencies list.

Validation Track Skills

1. Creating an Opportunity Canvas
1. Creating a Storyboard Designing Prototypes
1. Engaging Analysts via Inquiries

Build Track Skills
1. Optimizing PM Inputs for Development Outputs
1. Understanding GitLab Architecture
1. Demoing GitLab

Business Skills

1. Crafting a Strong Vision
1. Defining & Prioritizing for Success Metrics
1. Developing a Business Case
1. Investing Just Enough

Communication Skills

1. Documenting for Clarity
1. Presenting to Large Audiences
1. Representing GitLab's Entire Product Value

People Management Skills

1. Facilitating Career Development Conversations
1. Coaching GitLab Values Based Product Management
1. Aligning Your Team on Strategy
1. Applying Situational Leadership

### Contributing to our PM Competencies

Every GitLab team member is encouraged to contribute to the list of prioritized Product Manager competencies, as well as the content for each competency via merge requests to this page.

To contribute, open an issue in the Product project using the [Product Competencies](https://gitlab.com/gitlab-com/Product/-/blob/main/.gitlab/issue_templates/Product-Competencies.md) template. The steps in the issue will guide you through getting a future competency merged into this page.

## Learning and Development for Product Management

We have a library dedicated to collecting and highlighting the best resources to support the growth and success of product managers in doing their job at GitLab as well as beyond, to achieve their long term career goals. We encourage product managers to work with their managers to identify areas for improvement, and leverage the [learning and development for product management](./learning-and-development/) resources accordingly.

## Career Coaching

Aside from progressing in your role (and beyond) at GitLab, Product Managers are highly encouraged to engage with their managers on Career Coaching. Here are some resources:
- A [template for Career Coaching conversations](https://docs.google.com/document/d/1B1zNIH2lOIAvFnycSS5KiOIh_zoyXfYp45CKi91K1vk/edit) between Manager and Team Member
- GitLab's [Growth and Development Benefit](https://about.gitlab.com/handbook/total-rewards/benefits/general-and-entity-benefits/#growth-and-development-benefit)

### Evaluating External Roles
As members of a prolific, product-focused company, GitLab Product Managers are frequently approached with job offers at other companies. Below is a list of criteria to consider when evaluating those roles:
- **Culture:** Consider some of the tangible benefits of culture such as productivity, autonomy, transparency, and remote flexibility.
- **Product System:** Consider how well the company ships today, what the PM process is and how much autonomy Product Managers are given to do their primary role.
- **Role:** Consider the degree of challenge, scope and learning curve of the role, not just the title.
- **Company Trajectory:** Consider the rate at which the company is growing and how much additional market there is for it to capture. This can impact career growth  related to wealth generation over multi-year periods.
- **Market:** Consider the degree to which you'll be exposed to many different markets as opposed to being focused on one specific market.
- **GTM Motions:** Consider the type of GTM motion and how that will impact your available and priority sensing mechanisms.
- **Additional Resources:** [Seven tips for picking your next job](https://theskip.substack.com/p/seven-tips-for-picking-your-first), [Product Salaries](https://www.levels.fyi/company/Google/salaries/Product-Manager/)

## Product Manager Onboarding

Product Manager onboarding, beyond any [product specific steps in your first week onboarding ticket](https://gitlab.com/gitlab-com/people-ops/employment/blob/master/.gitlab/issue_templates/onboarding_tasks/department_product_management.md),
is defined in the Product projects [PM Onboarding issue template](https://gitlab.com/gitlab-com/Product/blob/master/.gitlab/issue_templates/PM-onboarding.md).

Onboarding issues can be tracked in the [Product Onboarding Issue Board](https://gitlab.com/gitlab-com/Product/-/boards/1283554?&label_name%5B%5D=onboarding).

Iteration on Product Management Onboarding is encouraged by all team members. To do so, create an MR against one of the above files and assign it to your manager for review and merge.

## Interviewing Product Management Candidates

A unique and important step in the interview process for Product Management candidates is our Deep Dive Interview. The goal of this interview is to understand the candidate's ability to communicate a long term vision as well as a short term MVC, both verbally during the interview itself, and written via two follow up issues. Once the issues are ready for you to read, it is an opportunity to provide feedback and see how the candidate responds to that feedback.

You can find more information and instructions on the Deep Dive interview [here](https://gitlab.com/gitlab-com/people-group/hiring-processes/blob/master/Product/DeepDive.md). For information on our hiring process, head over to our [hiring handbook pages](/handbook/hiring/). |

## Taking Time Off

<figure class="video_container">
  <iframe src="https://www.youtube.com/embed/AkNcYjWrvDU" frameborder="0" allowfullscreen="true"> </iframe>
</figure>

Team members are [strongly recommended to take two weeks of consecutive time off a year](/handbook/paid-time-off/#a-gitlab-team-members-guide-to-time-off). Extended leave longer than the [`no ask, must tell` GitLab paid time off](/handbook/paid-time-off/#a-gitlab-team-members-guide-to-time-off) is common, especially for [parental leave](/handbook/total-rewards/benefits/general-and-entity-benefits/#parental-leave). Leaving for a longer period of time can be daunting, but it is critical to ensure your `rest ethic` meets your `work ethic` and also to ensure we don't have single points of failure in the company. Here are a few suggestions for product managers to help plan for this time.

On a high level, these are the two most important things to do:

1. [Communicate your time off](/handbook/paid-time-off/#communicating-your-time-off)
1. [Create a PM coverage issue](https://gitlab.com/gitlab-com/Product/-/issues/new?issue%5Bassignee_id%5D=&issue%5Bmilestone_id%5D=) (details below)

### Creating a PM coverage issue

You can use [this issue template](https://gitlab.com/gitlab-com/Product/-/issues/new?issue%5Bassignee_id%5D=&issue%5Bmilestone_id%5D=) to define handshake responsibilites. For extended leave it is important to find one or more Directly Responsible Individuals (DRIs) that will be able to make product descisions while you are away. This may be your manager, another PM, or maybe the engineering manager for your team. The coverage issue should contain all the necessary information for the DRIs to make good decisions in your absence, so please make sure to include as much detail as needed. In addition to creating the issue, it may be useful to have a specific handover meeting to ensure that everyone is on the same page before you leave.

### Returning from Time Off

Returning from time off can be overwhelming and daunting. You should work with your DRIs to understand what has changed during your absence and what the current priorities are. Also, communicate transparently that your response time may be slower because you are catching up. Here are some additional tips on [how to return back to work after taking parental leave](/handbook/paid-time-off/#returning-to-work-after-parental-leave).

## Product Shadowing with Engineering

The Product Shadowing program is loosely based on the [CEO Shadow](/ceo/shadow/index.md) program and is designed to facilitate greater understanding between Product Managers and Engineers within a stage. The program was trialed with success in the Plan stage.

A Product Manager can host an Engineer within their stage to shadow them over two working days, or the equivalent split over multiple days to maximize experience with different functions of the role.

To propose a shadow, please create an issue in the stage issue tracker using other shadowing issues as an example ([example](https://gitlab.com/gitlab-org/plan/-/issues/118))

## Product Leadership

The separate page [Product Leadership](/handbook/product/product-leadership/) covers how to be an effective leader in the product management organization.
